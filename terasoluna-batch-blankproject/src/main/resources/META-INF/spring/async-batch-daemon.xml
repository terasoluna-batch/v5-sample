<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/jdbc https://www.springframework.org/schema/jdbc/spring-jdbc.xsd
            http://www.springframework.org/schema/task https://www.springframework.org/schema/task/spring-task.xsd
            http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Spring Batch launch context -->
    <import resource="classpath:META-INF/spring/launch-context.xml"/>

    <context:annotation-config />

    <task:annotation-driven />
    <task:executor id="daemonTaskExecutor" pool-size="${async-batch-daemon.job-concurrency-num}" queue-capacity="0"/>
    <task:scheduler id="daemonTaskScheduler" pool-size="${async-batch-daemon.scheduler.size}"/>

    <jdbc:initialize-database data-source="adminDataSource" enabled="${data-source.initialize.enabled:false}" ignore-failures="ALL">
        <jdbc:script location="${async-batch-daemon.schema.script}" />
        <jdbc:script location="${terasoluna-batch.commit.script}" />
    </jdbc:initialize-database>

    <bean id="jobRequestPollTask" class="org.terasoluna.batch.async.db.JobRequestPollTask"
          c:transactionManager-ref="adminTransactionManager"
          c:jobOperator-ref="jobOperator"
          c:batchJobRequestRepository-ref="batchJobRequestRepository"
          c:daemonTaskExecutor-ref="daemonTaskExecutor"
          c:automaticJobRegistrar-ref="automaticJobRegistrar" />

    <bean id="adminSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="adminDataSource"
          p:databaseIdProvider-ref="databaseIdProvider">
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration"
                  p:localCacheScope="STATEMENT"
                  p:lazyLoadingEnabled="true"
                  p:aggressiveLazyLoading="false"
                  p:defaultFetchSize="1000"
                  p:defaultExecutorType="REUSE" />
        </property>
    </bean>

    <bean id="batchJobRequestRepository" class="org.mybatis.spring.mapper.MapperFactoryBean"
        p:mapperInterface="org.terasoluna.batch.async.db.repository.BatchJobRequestRepository"
        p:sqlSessionFactory-ref="adminSqlSessionFactory" />

    <bean id="automaticJobRegistrar" class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
        <property name="applicationContextFactories">
            <bean class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean"
                p:resources="classpath:/META-INF/jobs/**/*.xml" />
        </property>
        <property name="jobLoader">
            <bean class="org.springframework.batch.core.configuration.support.DefaultJobLoader"
                p:jobRegistry-ref="jobRegistry" />
        </property>
    </bean>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
        p:jobRegistry-ref="jobRegistry" />

    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties">
            <props>
                <prop key="Oracle">oracle</prop>
            </props>
        </property>
    </bean>

</beans>
